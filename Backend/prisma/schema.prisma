
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
  hashedPassWord String
  refreshToken String?  @db.VarChar(400)
  role Role @default(USER)
  updatedAt  DateTime  @updatedAt
  profile UserProfile?
  active Boolean @default(true)
  projects Project[] 
  calender Calender[]
  notifications Notification[]
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

model UserProfile {
  id    Int    @id @default(autoincrement())
  user Users @relation( fields: [userId], references: [id])
  userId Int @unique 
  profilePicFilePath String?
  documents Documents[]
}

model Documents {
  id    Int    @id @default(autoincrement())
  path String
  documentName String
  user UserProfile @relation( fields: [profileId], references: [id])
  profileId Int @unique 
}

model Project {
  id    Int    @id @default(autoincrement())
  name String
  description String
  owner String 
  peoples Users[]
  userId Int?
  createdAt DateTime @default(now())
  calendar Calender[]
}

model Calender {
   id    Int    @id @default(autoincrement() )
   workDescription String  @db.VarChar(500)
   createdAt DateTime @default(now())
   month Int @db.TinyInt 
   user Users @relation(fields: [userId], references: [id])
   userId Int 
   project Project @relation(fields: [projectID], references: [id], onDelete: Cascade)
   projectID Int
}

model Notification {
  id    Int    @id @default(autoincrement() )
  message String
  type NotificationTypes @default(INFO)
  createdAt DateTime @default(now())
  user Users @relation(fields: [userId], references: [id])
  userId Int 
}

enum NotificationTypes {
  INFO
  WARN
}